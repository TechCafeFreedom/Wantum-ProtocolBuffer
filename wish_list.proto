syntax = "proto3";
package proto_wishlist;

import "user.proto";
import "google/protobuf/empty.proto";

option go_package = ".;pb";

service WishListService {
  // やりたいことリストの新規作成
  rpc CreateWishListInfo(CreateWishListInfoRequest) returns (WishList) {};
  // やりたいことリスト一覧取得
  rpc GetWishList(GetWishListRequest) returns (WishList) {};
  // やりたいことリスト単体取得
  rpc GetWishListInfo(GetWishListInfoRequest) returns (stream WishListInfo) {};
  // やりたいことリスト更新（カードの移動やタイトルの変更など：ユーザーアクション）
  rpc UpdateWishListInfo(WishListInfo) returns (google.protobuf.Empty) {};
  // やりたいことリスト自体の削除
  rpc DeleteWishListInfo(DeleteWishListInfoRequest)
      returns (google.protobuf.Empty) {};
}

// やりたいことリスト新規作成リクエスト
message CreateWishListInfoRequest {
  // やりたいことリスト名
  string title = 1;
}

// やりたいことリスト（ID, titleのみ）の配列を取得するためのリクエスト
message GetWishListRequest {
  // 取得開始位置を知らせるためのやりたいことリストID
  int64 wish_list_id = 1;
  // 最大取得件数
  int64 limit = 2;
}

// IDをもとにやりたいことリストを1件取得するためのリクエスト
message GetWishListInfoRequest {
  // やりたいことリストを特定するためのID
  int64 wish_list_id = 1;
}

// やりたいことリスト削除用リクエスト
message DeleteWishListInfoRequest {
  // 削除したいやりたいことリストのID
  int64 wish_list_id = 1;
}

// やりたいことリストの一覧（配列）
message WishList {
  // やりたいことリスト一覧（配列）
  repeated WishListInfo wish_list = 1;
}

// やりたいことリスト情報
message WishListInfo {
  // やりたいことリストを特定するためのID
  int64 wish_list_id = 1;
  // やりたいことリストタイトル
  string title = 2;
  // やりたいことカテゴリー一覧（配列）
  repeated WishCategoryInfo wish_categories = 3;
  // 編集権限を持っているユーザー一覧（配列）
  repeated proto_user.UserInfo authors = 4;
  // 招待リンク
  string invite_url = 5;
}

// やりたいことカテゴリー情報
message WishCategoryInfo {
  // やりたいことカテゴリーを特定するためのID
  int64 wish_category_id = 1;
  // やりたいことカテゴリー名
  string title = 2;
  // カテゴリー内のやりたいことカード一覧（配列）
  repeated WishCardInfo wish_cards = 3;
}

// やりたいことカード情報
message WishCardInfo {
  // wish_cardを特定するためのID
  int64 wish_card_id = 1;
  // 何をしたいのか
  string activity = 2;
  // やりたいことの説明
  string description = 3;
  // いつやりたいか（UNIX）
  int64 date = 4;
  // 完了日時
  string done_at = 5;
  // どこでそれをしたいのか
  string place = 6;
  // タグ一覧（配列）
  repeated string tags = 7;
}
